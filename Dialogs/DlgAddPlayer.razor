
<div class="modal" tabindex="-1" role="dialog" style="display:block;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header Success">
        <h5 class="modal-title">Add player</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnCancelCallback">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        @if (Model != null) {
            <EditForm Model="@Model">
                <div class="form-group row">
                    <div class="form-group">
                        <label for="Name">Name</label>
                        <InputText id="Name" @bind-Value="Model.Name" />
                    </div>
                </div>

                <div class="form-group row">
                    <div class="form-group">
                        <label for="Handicap">Handicap</label>
                        <InputNumber id="Handicap" @bind-Value="Model.Handicap" />
                    </div>
                </div>
            </EditForm>
        }
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" @onclick="OnSave">Ok</button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancelCallback" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public EventCallback<Player> OnSaveCallback { get; set; }

    [Parameter]
    public EventCallback OnCancelCallback { get; set; }

    public Player Model {get; set;}

    [Parameter]
    public Guid CardId {get; set;}

    protected override void OnInitialized() {

        if (Model == null) {
            Model = new Player();
        }
    }

    private void OnSave() {
      OnSaveCallback.InvokeAsync(Model);
    }


}
